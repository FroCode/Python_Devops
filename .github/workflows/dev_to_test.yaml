name: push-dev-to-test

on:
  workflow_run:
    workflows: ["squash-merge-into-dev", "Revert-from-dev"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      force_push:
        description: "Force push dev to test (overwrites test branch)"
        required: false
        default: "false"

jobs:
  push-to-test:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Ensure dev exists and fetch test
        run: |
          git fetch origin
          if ! git ls-remote --heads origin dev | grep -q dev; then
            echo "❌ Error: dev branch missing"
            exit 1
          fi
          if ! git ls-remote --heads origin test | grep -q test; then
            echo "⚠️ test missing — creating from dev"
            git push origin origin/dev:test
            exit 0
          fi

      - name: Sync dev to test (squash merge + revert support)
        id: sync
        run: |
          git checkout test
          git fetch origin dev

          # Attempt squash merge
          set +e
          git merge --squash origin/dev
          STATUS=$?
          set -e

          if [ $STATUS -ne 0 ]; then
            echo "❌ Conflict detected — creating PR"
            TIMESTAMP=$(date +%s)
            CONFLICT_BRANCH="conflict/dev-to-test-$TIMESTAMP"
            git checkout -b "$CONFLICT_BRANCH"
            git push origin "$CONFLICT_BRANCH"

            gh pr create \
              --base test \
              --head "$CONFLICT_BRANCH" \
              --title "Merge conflict: dev into test" \
              --body "Automatic PR: resolve conflicts and merge."
            echo "conflict=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # ✅ IMPORTANT FIX: no changes staged = revert cleanup
          if git diff --cached --quiet; then
            echo "ℹ️ No squash content — syncing histories via hard reset"
            git reset --hard origin/dev
            git push origin test --force
            echo "✅ test fully synced to dev (revert scenario)"
            echo "conflict=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          git commit -m "Squash merge dev into test [ci skip]"
          git push origin test
          echo "✅ Squash merge completed"
          echo "conflict=false" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Validate test latest commit
        if: steps.sync.outputs.conflict == 'false'
        run: |
          git fetch origin test
          git checkout test
          echo "✅ Latest test commit:"
          git log -1 --pretty=format:"%h - %s"

      - name: Notify conflict
        if: steps.sync.outputs.conflict == 'true'
        run: |
          echo "⚠️ Manual conflict resolution required"
